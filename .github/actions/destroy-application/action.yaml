name: 'Terraform Application Destroy'
description: 'Initialize and destroy Terraform configuration for application'

inputs:
  awsAccessKeyId:
    description: 'AWS Access Key ID'
    required: true
  awsBucket:
    description: 'AWS Bucket name'
    required: true
  awsDynamoDBTable:
    description: 'AWS DynamoDB Table name'
    required: true
  awsRegion:
    description: 'AWS S3 Region'
    required: true
  awsSecretAccessKey:
    description: 'AWS Secret Access Key'
    required: true
  branch:
    description: 'Branch for the infrastructure'
    required: true
  environment:
    description: 'Environment for the infrastructure'
    required: true
  kubeconfigContent:
    description: 'Kubeconfig content'
    required: true
  repoUrl:
    description: 'Repository URL for the Application manifests'
    required: true
  workingDirectory:
    description: 'Working directory inside the repo'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=${{ inputs.awsBucket }}" \
          -backend-config="key=${{ env.BACKEND_KEY }}" \
          -backend-config="region=${{ inputs.awsRegion }}" \
          -backend-config="dynamodb_table=${{ inputs.awsDynamoDBTable }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.awsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.awsSecretAccessKey }}
        BACKEND_KEY: "gitops-demo/${{ inputs.environment }}/${{ inputs.branch }}/application-key.tfstate"
      working-directory: ${{ inputs.workingDirectory }}
      shell: bash

    - name: Find Application Directories
      run: |
        applications=$(find applications/${{ inputs.environment }} -type f -name 'application.yaml' -exec dirname {} \; | xargs -I {} basename {})
        echo "applications=[$(echo $applications | sed 's/ /, /g')]" >> $GITHUB_ENV
      shell: bash

    - name: Terraform Destroy
      run: |
        terraform destroy \
          -auto-approve \
          -auto-approve \
          -var "kubeconfig_path=${{ inputs.kubeconfigPath }}" \
          -var "applications=${{ env.applications }}" \
          -var "path=argocd/${{ inputs.environment }}" \
          -var "repo_url=${{ inputs.repoUrl }}" \
          -var "target_revision=${{ inputs.branch }}" \
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.awsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.awsSecretAccessKey }}
      working-directory: ${{ inputs.workingDirectory }}
      shell: bash