name: 'Terraform Infrastructure Creation'
description: 'Initialize and apply Terraform configuration'

inputs:
  applicationsList:
    description: 'List of applications to install'
    required: true
  awsAccessKeyId:
    description: 'AWS Access Key ID'
    required: true
  awsBucket:
    description: 'AWS Bucket name'
    required: true
  awsDynamoDBTable:
    description: 'AWS DynamoDB Table name'
    required: true
  awsRegion:
    description: 'AWS S3 Region'
    required: true
  awsSecretAccessKey:
    description: 'AWS Secret Access Key'
    required: true
  branch:
    description: 'Branch for the infrastructure'
    required: true
  clusterName:
    description: 'Cluster name'
    required: true
  environment:
    description: 'Environment for the infrastructure'
    required: true
  kubeconfigPath:
    description: 'Kubeconfig content'
    required: true
    default: ""
  repoUrl:
    description: 'Repository URL for the Application manifests'
    required: true
  workingDirectory:
    description: 'Working directory inside the repo'
    required: true

outputs:
  argocdInitialAdminSecret:
    description: 'ArgoCD admin initial password'
    value: ${{ steps.output.outputs.argocdInitialAdminSecret }}
  kubeconfigContent:
    description: 'Kubeconfig content'
    value: ${{ steps.output.outputs.kubeconfigContent }}
  kubeconfigPath:
    description: 'Kubeconfig file path'
    value: ${{ steps.output.outputs.kubeconfigPath }}
  

runs:
  using: 'composite'
  steps:
    - name: Terraform Init
      run: |
        terraform init \
          -backend-config="bucket=${{ inputs.awsBucket }}" \
          -backend-config="key=${{ env.BACKEND_KEY }}" \
          -backend-config="region=${{ inputs.awsRegion }}" \
          -backend-config="dynamodb_table=${{ inputs.awsDynamoDBTable }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.awsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.awsSecretAccessKey }}
        BACKEND_KEY: "gitops-demo/${{ inputs.environment }}/${{ inputs.branch }}/application-key.tfstate"
      working-directory: ${{ inputs.workingDirectory }}
      shell: bash

    - name: Terraform Apply
      run: |
        terraform apply \
          -auto-approve \
          -var 'applications_list=${{ inputs.applicationsList }}' \
          -var "cluster_name=${{ inputs.clusterName }}"
          -var "kubeconfig_path=${{ inputs.kubeconfigPath }}" \
          -var "path=argocd/${{ inputs.environment }}" \
          -var "repo_url=${{ inputs.repoUrl }}" \
          -var "target_revision=${{ inputs.branch }}"
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.awsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.awsSecretAccessKey }}
      working-directory: ${{ inputs.workingDirectory }}
      shell: bash

    - name: Terraform Output
      id: output
      run: |
        echo "argocdInitialAdminSecret=$(terraform output -raw argocd_initial_admin_password)" >> $GITHUB_OUTPUT
        echo "kubeconfigContent=$(terraform output -raw kubeconfig_content)" >> $GITHUB_OUTPUT
        echo "kubeconfigPath=$(terraform output -raw kubeconfig_path)" >> $GITHUB_OUTPUT
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.awsAccessKeyId }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.awsSecretAccessKey }}
      working-directory: ${{ inputs.workingDirectory }}
      shell: bash